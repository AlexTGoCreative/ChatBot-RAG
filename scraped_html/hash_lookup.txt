MetaDefender Cloud Search Home Account Management Operation Integrations Knowledge Base Legal Compliance Release Notes Threat Intelligence Reputation MetaDefender Cloud API v4 Metadefender Cloud Threat Intelligence API v5 v 4 MetaDefender Cloud API v4 About This Guide How to use MetaDefender Cloud Public APIs Key Features of MetaDefender Cloud Apikey GET Apikey info GET Apikey limits GET Apikey scan history GET Apikey remaining limits File Scanning POST Analyze file GET Fetch analysis result POST Scanning a repository POST Retrieving sanitization details for multiple data ids GET Retrieving webhook status Hash Lookups GET Retrieving scan reports using a data hash POST Retrieving scan reports for multiple data hashes GET Retrieving scan history GET File badge Reputation Service GET IP lookup POST IP bulk lookup GET URL lookup POST URL bulk lookup GET Domain lookup POST Domain bulk lookup Application Information GET EXIF lookup GET PE info lookup GET APK manifest lookup Data Sanitization Cdr GET Download sanitized files DELETE Delete the sanitized version of the file Malware Sample Sharing GET Feed - Hashes GET False positives feed GET False positives by engine feed GET Download link for a file Threat Intelligence Feed GET Latest clean hashes GET Latest Infected Hashes Status Endpoints GET API version GET Engine definitions Dynamic Analysis POST Sandbox URL scan GET Sandbox lookup GET Hash lookup with sandbox MetaDefender Cloud API v4 4.0Terms of ServiceApache 2.0 OAS 3 About This Guide Welcome to the MetaDefender Cloud guide. This guide is intended to provide the information you need to: Start analyzing files with 20+ anti-malware engines How to use MetaDefender Cloud Public APIs Learn about new features, updated features, and bug fixes Learn about frequently asked questions and additional concepts through our library of knowledge base articles Key Features of MetaDefender Cloud File Analysis - Analyzing binaries with 20+ anti-malware engines Deep CDR (aka Content Disarm and Reconstruction) with support for 100+ file types Sandbox dynamic analysis to detect more unknown and targeted attacks Binary vulnerability data assessment IP-Domain reputation Threat Intelligence Feeds Server https://api.metadefender.com/v4 Apikey The apikey and related limits can be found in the account page. It is generated automatically when the account is created. The apikey is used for all API requests to MetaDefender Cloud service. Endpoints GET /apikey/ GET /apikey/limits GET /apikey/scan-history GET /apikey/limits/status Apikey info Retrieve information about your apikey such as (but not limited to): max file size, API limits, created date, expiration date, and account nickname. Auth None Headers apikey string The apikey identifies and authenticates the user. * GET /apikey/ cURL Request Requests net/http Guzzle HttpClient OkHttp curl --get \ --url 'https://api.metadefender.com/v4/apikey/' \ --header 'apikey: 4gg5f4123eg4gg7a58d502dfc3f2898g' Copy Responses application/json; charset=utf-8 200 The request has succeeded Headers X-Authenticated string Indicates the source of authentication. X-Response-Time string Indicates the response time expressed in milliseconds. Body Account Information object max_file_download int32 The maximum file size for downloading * max_upload_file_size int32 The maximum upload size for files (expressed in MB) * max_archive_file_depth int32 The maximum file depth for archives * max_archive_file_size int32 The maximum upload size for archives (expressed in MB) * max_archive_file_number int32 The maximum number of files contained in an archive * limit_prevention int32 The daily limit of Prevention API calls. The daily limit is reset 24 hours after the first call on a given day. * limit_reputation int32 The daily limit of Reputation API calls. The daily limit is reset 24 hours after the first call on a given day. * limit_threat_intel_search int32 The daily limit of Threat Intel Search API calls. The daily limit is reset 24 hours after the first call on a given day. * limit_sandbox int32 The daily limit of Sandbox API calls. The daily limit is reset 24 hours after the first call on a given day. * limit_feed int32 The daily limit of Feed API calls. The daily limit is reset 24 hours after the first call on a given day. * mdc_license_type string The apikey's MetaDefender Cloud license type qos_scan string The selected scan queue, based on the apikey type * userid string The userid corresponding to the apikey * sandbox_qos_scan string The selected sandbox scan queue, based on the apikey type * time_interval string The duration of time your apikey limit lasts for (daily for most) * expiration_date string The expiration date of the apikey. For paid apikey's this date is in the future. * workflow_rule string The flag specifies if an apikey is allowed to scan large files or archives (1GB+) * enforce_private_scan boolean The attribute that specifies if the apikey enforces private scans * is_enterprise boolean The attribute that specifies if the apikey is enterprise * throttling_limit int32 The maximum number of requests for the duration of time your apikey lasts (one day for most) * mtls_only boolean The attribute that specifies if the apikey is MTLs only * portal_api_key string The apikey that has been queried * nickname string The nickname of the user correlated to the queried apikey * vulnerability_submissions array[string] The number of vulnerability submissions done by the user correlated to the queried apikey * created_at string The date when the apikey was created * updated_at string The last date when the apikey information was updated * scan_with string The service used by the apikey for scanning * paid_user int32 Specifies the user's paid status. - 1: Paid user - 0: Not paid user * organization object The organization information organization_id string The unique identifier of the organization * limit_prevention int32 The organization's daily limit for Prevention API calls * limit_reputation int32 The organization's daily limit for Reputation API calls * limit_threat_intel_search int32 The organization's daily limit for Threat Intel Search API calls * limit_sandbox int32 The organization's daily limit for Sandbox API calls * limit_feed int32 The organization's daily limit for Feed API calls * throttling_limit int32 The organization's request throttling limit * ip_whitelist object * v4 array[string] IPv4 whitelist v6 array[string] IPv6 whitelist expiration_date date-time The organization's license expiration date * licenseLimitsTimeInterval string The duration of time your organization limit lasts for (daily for most) * mdc_license_type string The organization's MetaDefender Cloud license type * max_upload_file_size int32 Maximum file upload size for the organization (MB) * max_archive_file_size int32 Maximum archive file size for the organization (MB) * max_archive_file_number int32 Maximum number of files in archives for the organization * max_archive_file_depth int32 Maximum archive depth for the organization * qos_scan string The selected scan queue, based on the organization's license type * sandbox_qos_scan string The selected sandbox scan queue, based on the organization's license type * EXPAND 404 The requested page was not found Response { "max_file_download": 100, "max_upload_file_size": 140, "max_archive_file_depth": 5, "max_archive_file_size": 140, "max_archive_file_number": 50, "limit_prevention": 40, "limit_reputation": 4000, "limit_threat_intel_search": 0, "limit_sandbox": 1, "limit_feed": 1000, "qos_scan": "low", "userid": "userid1234567", "sandbox_qos_scan": "normal", "time_interval": "daily", "expiration_date": "1970-01-01T00:00:00.000Z", "workflow_rule": 0, "enforce_private_scan": false, "is_enterprise": false, "throttling_limit": 0, "mtls_only": false, "portal_api_key": "3d774dcf261286a3d7386ccddd83b2c8", "nickname": "white_brook_uauscbg2", "vulnerability_submissions": [], "created_at": "2022-04-21T12:09:35.699Z", "updated_at": "2022-08-04T06:49:59.495Z", "scan_with": "none", "paid_user": 0, "organization": { "organization_id": "org_123456", "limit_prevention": 30000, "limit_reputation": 40000, "limit_threat_intel_search": 1000, "limit_sandbox": 1000, "limit_feed": 500, "throttling_limit": 1000, "v4": [ "192.168.1.1", "10.0.0.1" ], "v6": [ "2001:db8::1" ], "expiration_date": "1970-01-01T00:00:00.000Z", "licenseLimitsTimeInterval": "daily", "mdc_license_type": "enterprise", "max_upload_file_size": 1500, "max_archive_file_size": 2400, "max_archive_file_number": 5000, "max_archive_file_depth": 50, "qos_scan": "high", "sandbox_qos_scan": "high" } } Copy EXPAND Apikey limits Retrieve information about the consumed limits for an apikey. Every time a request is made to an endpoint that consumes a specific limit, it will be reflected in this endpoint. It is the equivalent of the X-RateLimit-Used from the response headers. Depending on your license, your rate limit will reset daily or monthly. Auth None Headers apikey string The apikey identifies and authenticates the user. * GET /apikey/limits cURL Request Requests net/http Guzzle HttpClient OkHttp curl --get \ --url 'https://api.metadefender.com/v4/apikey/limits' \ --header 'apikey: 4gg5f4123eg4gg7a58d502dfc3f2898g' Copy Responses application/json; charset=utf-8 200 The request has succeeded Headers X-Authenticated string Indicates the source of authentication. X-Response-Time string Indicates the response time expressed in milliseconds. Body Apikey usage object reputation_api int32 The consumed Reputation API limits for the apikey * threat_intel_search_api int32 The consumed Threat Intel Search API limits for the apikey * prevention_api int32 The consumed Prevention API limits for the apikey * feed_api int32 The consumed Feed API limits for the apikey * download_file int32 The consumed limits for file downloads for the apikey * sandbox_api int32 The consumed Dynamic Analysis API limits for the apikey * 404 The requested page was not found Response { "reputation_api": 8, "threat_intel_search_api": 0, "prevention_api": 99, "download_file": 0, "sandbox_api": 0, "feed_api": 0 } Copy Apikey scan history Retrieve a paginated list of files uploaded by the user in reverse chronological order (newest to oldest). The pagination is controlled by the user (how many items per page and which page) by specifying the limit and offset query parameters in the request. The response only contains a summary of the files, with minimum information. Auth None Headers apikey string The apikey identifies and authenticates the user. * Query String limit integer Pagination - how many entries you want to return. offset integer Pagination - how many entries to skip (sorted chronologically). cursor string Utilize a string-based cursor for efficient pagination in database queries. This approach enhances performance and should be used in place of the traditional offset parameter. search string An optional search term used to filter results based on hash or file display name. GET /apikey/scan-history cURL Request Requests net/http Guzzle HttpClient OkHttp curl --get \ --url 'https://api.metadefender.com/v4/apikey/scan-history' \ --header 'apikey: 4gg5f4123eg4gg7a58d502dfc3f2898g' \ --data limit={limit} \ --data offset={offset} \ --data cursor={cursor} \ --data search={search} Copy Responses application/json; charset=utf-8 200 The request has succeeded Scan history object data array[object] Scan History * data_id string The unique id received by the API for a submitted file * process_info object Information about the analysis process * progress_percentage int32 The progress percentage of the analysis process * file_info object Information about the file * md5 string The MD5 hash corresponding to the file scanned sha1 string The SHA1 hash corresponding to the file scanned * sha256 string The SHA256 hash corresponding to the file scanned display_name string The display name of the file * file_type_extension string The file extension * scan_results object Scan result * total_detected_avs int32 The number of AVs that detected a threat * total_avs int32 The number of AVs used by the API * scan_all_result_i int32 The flag that specifies if the submitted file is infected * start_time string The date when the scan started * scan_with string The service used by the apikey for scanning * dlp_info object Contains the verdict from Proactive DLP verdict integer The overall result for the scanned file. Possible values: 0 - Clean 1 - Found matched data 2 - Suspicious 3 - Failed 4 - Not scanned Enum: 0,1,2,3,4 sanitized object Represents the sanitization information of an item. reason string The reason or explanation for the sanitization. * result string The result or outcome of the sanitization process. * progress_percentage integer The progress percentage of the sanitized file. * failure_reasons object The object wrapping the list of files in the archive for which sanitization failed. data_id object Sanitization failure reason for file * display_name string The name of the offending file. * file_path string Path to reach the file * reason string Description of the sanitization error * details string Additional details on the sanitization error sandbox object Sandbox scan final verdict verdict string The overall result for the scanned file. * threatLevel integer The infection score indicating the severity of the detected threats. * confidence integer The confidence score when determining the severity of the detected threats. * blocked boolean The indicator whether the file is blocked. vulnerability object The highest vulnerability based on the CVEs associated with the file severity_index integer A numerical representation of the severity of the vulnerability severity integer A textual representation of the severity index of the vulnerability Enum: LOW,MODERATE,IMPORTANT,CRITICAL nextCursor string A string-based cursor used to retrieve the next page of results, replacing the traditional offset parameter. This parameter is available only on the last element within the results array. EXPAND 404 The requested page was not found Response { "data": [ { "data_id": "bzIzMDUxNzZSangxTWRjdExtWHFrTFhMVTU", "process_info": { "progress_percentage": 0 }, "scan_results": { "scan_all_result_i": 255, "start_time": "2023-05-17T11:17:14.437Z", "total_avs": 0, "total_detected_avs": 0 }, "file_info": { "sha1": "0C8C6A0277B4A6DB99778308E6038CD547AC61C6", "display_name": "example.txt", "file_type_extension": "txt" }, "scan_with": "mdcore" }, { "data_id": "bzIzMDUxNm5WNXpvMmJVOGxqZU9pWFE1Yzk", "process_info": { "progress_percentage": 100 }, "scan_results": { "scan_all_result_i": 0, "start_time": "2023-05-16T02:35:06.559Z", "total_avs": 32, "total_detected_avs": 0 }, "file_info": { "md5": "57284175F0F6653A2132DF45DC630D83", "sha1": "4586636197B99E8984F8200810F32AED728C2E1B", "sha256": "26D96BAE6D514FFE543353D2569E6AD4BEACC4C03DF096AC3AB93ED194E572AB", "file_type_extension": "pdf", "display_name": "Adobe Portable Document Format.pdf" }, "scan_with": "mdcore", "dlp_info": { "verdict": 0 }, "sanitized": { "reason": "Sanitization successful", "progress_percentage": 100, "result": "Sanitized" }, "sandbox": { "confidence": "1", "verdict": "INFORMATIONAL", "blocked": false, "threatLevel": 0.10000000149011612 }, "vulnerability": { "severity_index": 36, "severity": "LOW" }, "nextCursor": "NWZkZzMiN4JkNWA5ZGNiYzBhOTJjN2Pn" }, { "data_id": "bzIzMDLLvm5WNXpvMmoVOGXqZU9pWFE1Yzk", "process_info": { "progress_percentage": 100 }, "scan_results": { "scan_all_result_i": 0, "start_time": "2023-06-18T02:35:07.549Z", "total_avs": 32, "total_detected_avs": 0 }, "file_info": { "md5": "87284175F0F6653A2132DD75RC630D83", "sha1": "4586636197B99E8984F82AS910F32AED728C2E1B", "sha256": "26D96BAE6D514FFE543353D2569ECCK24EACC4C03DF096AC3AB93ED194E572AB", "file_type_extension": "dll", "display_name": "steam_apirajas.dll" }, "scan_with": "mdcore", "sanitized": { "reason": "Error", "result": "Sanitization Failed", "progress_percentage": 100 }, "failure_reasons": { "YnpJME1ETXdNV3BWVFVsM1QwUnNOQWVxZnFzTjMtWHY": { "display_name": "steam_apirajas-2.dll", "file_path": "steam_apirajas.dll/steam_apirajas-2.dll", "reason": "Unsupported version", "details": "Version 5.1.2600.2180 is not supported" } }, "nextCursor": "NWZkZzMiN4JkNWA5ZGNiYzBhOTJjN2Pn" } ] } Copy EXPAND Apikey remaining limits Retrieve information about the remaining limits for an apikey. Auth None Headers apikey string The apikey identifies and authenticates the user. * GET /apikey/limits/status cURL Request Requests net/http Guzzle HttpClient OkHttp curl --get \ --url 'https://api.metadefender.com/v4/apikey/limits/status' \ --header 'apikey: 4gg5f4123eg4gg7a58d502dfc3f2898g' Copy Responses application/json; charset=utf-8 200 The request has succeeded Apikey usage object reputation_api int32 The remaining Reputation API limits for the apikey * threat_intel_search_api int32 The remaining Threat Intel Search API limits for the apikey * prevention_api int32 The remaining Prevention API limits for the apikey * feed_api int32 The remaining Feed API limits for the apikey * download_file int32 The remaining limits for file downloads for the apikey * sandbox_api int32 The remaining Dynamic Analysis API limits for the apikey * throttling_limit int32 The remaining Throttling limits for the apikey * 404 The requested page was not found Response { "reputation_api": 3992, "threat_intel_search_api": 25, "prevention_api": 3901, "download_file": 100, "sandbox_api": 100, "feed_api": 4000, "throttling_limit": 8 } Copy File Scanning Scanning a file starts with uploading the file to MetaDefender Cloud to initiate the scan process. Although we are trying to keep scanning very fast, scanning with more than 30 engines might take from a few seconds to many minutes depending on file type, file size, and current traffic. Also, archives usually take longer when scanning all the files inside. Due to these variables, we are not able to guarantee scanning times. Free API users are sent to different queues with a lower priority, and MetaDefender Cloud customers' scan requests are prioritized. Scanning a file consists of the following steps: Initiate scan request by uploading a file Retrieve scan report using unique data_id returned from Scan File API Notes: When both the multiscan and sandbox functionalities are concurrently operational, and specific rate limits have been established for the sandbox, while none exist for multiscan, rather than generating an error, the sandbox process will be executed. Consequently, the associated data_id will return a status code of 253, denoting 'Not Scanned. Rate Limit Exceeded,' within the scan results. Endpoints POST /file GET /file/{dataId} POST /repo POST /dataIdBulkLookup GET /file/webhooks/{dataId} SHOW Hash Lookups MetaDefender provides two basic ways of looking up scan results using data hashes, MD5, SHA1, and SHA256: Single hash lookup Multiple hash lookup While single hash lookup provides full scan results related to the hash, if found, multiple hash lookup will return a list of condensed results with links (data_ids) to the full scan results. Endpoints GET /hash/{hash} POST /hash GET /hash/{hash}/scanhistory GET /hash/{hash}/badge Retrieving scan reports using a data hash Retrieve scan reports by looking up a hash using MD5, SHA1 or SHA256 Will not return results for private processing. Use the Fetch analysis result endpoint to retrieve private scan results. Auth None Headers apikey string The apikey identifies and authenticates the user. * Path Params hash string The MD5, SHA1 or SHA256 hash you want to look up information for * GET /hash/{hash} cURL Request Requests net/http Guzzle HttpClient OkHttp curl --get \ --url 'https://api.metadefender.com/v4/hash/6A5C19D9FFE8804586E8F4C0DFCC66DE' \ --header 'apikey: 4gg5f4123eg4gg7a58d502dfc3f2898g' Copy Responses application/json; charset=utf-8 200 The request has succeeded Headers X-Authenticated string Indicates the source of authentication. X-RateLimit-Limit string Indicates the maximum number of requests that a client can make within a given time period. X-RateLimit-Used string Indicates the number of requests that a client has made within the current time period, as tracked by the server's rate limiting system. X-RateLimit-Remaining string Indicates the number of requests that a client can still make within the current time period, as determined by the server's rate limiting system. X-RateLimit-Reset-In string Indicates the amount of time remaining until the rate limit resets, as determined by the server's rate limiting system. X-RateLimit-For string Indicates the resource or endpoint for which the rate limit applies. X-RateLimit-Interval string Indicates the time interval during which the rate limit is enforced by the server. X-Response-Time string Indicates the response time expressed in milliseconds. X-Redis-Cache string Indicates whether the response was served from a Redis cache. Content-Encoding string Indicates the encoding strategies used on the response. Body Hash lookup results object scan_result_history_length int32 The number of historical scan results associated with the file * file_id string File id corresponding to the submitted file * data_id string The dataId assigned to the file that underwent data sanitization * sanitized object Represents the sanitization information of an item. * reason string The reason or explanation for the sanitization. * result string The result or outcome of the sanitization process. * process_info object Process information * result string The result or status of the process. * profile string The profile or configuration used for the process. * post_processing object Represents the post-processing actions performed on the process. * copy_move_destination string The destination path for copying or moving the process. * converted_to string The converted format or type of the process. * converted_destination string The destination path for the converted process. * actions_ran string The actions that were successfully executed on the process. * actions_failed string The actions that failed to execute on the process. * file_type_skipped_scan boolean Indicates whether the scan for the file type was skipped. * blocked_reason string The reason for blocking the process. * scan_results object The results of the scan * scan_details object Scanning details per engine * scan engine object scan_time int32 Scanning time for engine * def_time string The latest engine definition time * scan_result_i int32 Indicates whether the engine found the file as malicious * threat_found string Threat found by engine * scan_all_result_i int32 The result of the scanning process, indicating the status or outcome as a code * start_time string The date when the scan started * total_time string The total duration of the scan * total_avs int32 The number of AVs used by the API * total_detected_avs int32 The number of AVs that detected a threat * progress_percentage int32 The progress percentage of the scanning process * scan_all_result_a string The result of the scanning process, indicating the status or outcome * file_info object Information about the file * md5 string The MD5 hash corresponding to the file scanned sha1 string The SHA1 hash corresponding to the file scanned * sha256 string The SHA256 hash corresponding to the file scanned display_name string The display name of the file * file_type_extension string The file extension * metadata object Additional context / verbose information for each file submission share_file int32 Flag that indicates if the file can be shared * rest_version string Version of the MetaDefender Cloud API * additional_info array[string] Additional info * votes object Community feedback that rates the integrity of the file * up int32 Positive feedback * down int32 Negative feedback * EXPAND 404 The requested page was not found Response { "scan_result_history_length": 154, "file_id": "ZTE3MDgyMkh5UmZGTl94cV9a", "data_id": "ZTE3MDgyMkh5UmZGTl94cV9aUzFsSWU3aGtVNA", "sanitized": {...}, "process_info": {...}, "scan_results": {...}, "file_info": {...}, "share_file": 1, "rest_version": "4", "additional_info": [], "votes": {...} } Copy Retrieving scan reports for multiple data hashes Look up the scan results based on MD5, SHA1, or SHA256 for multiple data hashes. Auth None Headers apikey string The apikey identifies and authenticates the user. * includescandetails integer A value of 0 will only get the hashes while a value of 1 in this field will also retrieve hash details (the default value is 0). Allowed values 0 (get only hashes) 1 (get hash details also) Request Body application/json Retrieve scan reports for multiple data hashes Multiple hash lookup request object hash array[string] Up to 1000 items per request * POST /hash cURL Request Requests net/http Guzzle HttpClient OkHttp curl --request POST \ --url 'https://api.metadefender.com/v4/hash' \ --header 'apikey: 4gg5f4123eg4gg7a58d502dfc3f2898g' \ --header 'includescandetails: 1' \ --data '{ "hash": [ "8F7920DA1D52B06A61D7A41C51D595AC", "AA73B43084E93E741552E5B9C8DEE457", "3433B43084EABC741552E52AD8DEE457" ] }' Copy Responses application/json; charset=utf-8 200 The request has succeeded Headers X-Authenticated string Indicates the source of authentication. X-RateLimit-Limit string Indicates the maximum number of requests that a client can make within a given time period. X-RateLimit-Used string Indicates the number of requests that a client has made within the current time period, as tracked by the server's rate limiting system. X-RateLimit-Remaining string Indicates the number of requests that a client can still make within the current time period, as determined by the server's rate limiting system. X-RateLimit-Reset-In string Indicates the amount of time remaining until the rate limit resets, as determined by the server's rate limiting system. X-RateLimit-For string Indicates the resource or endpoint for which the rate limit applies. X-RateLimit-Interval string Indicates the time interval during which the rate limit is enforced by the server. X-Response-Time string Indicates the response time expressed in milliseconds. X-Redis-Cache string Indicates whether the response was served from a Redis cache. Content-Encoding string Indicates the encoding strategies used on the response. Body Bulk hash lookup results object data array[object] * data_id string The dataId assigned to the file that underwent data sanitization * scan_result_i int32 The result of the scanning process, indicating the status or outcome as a code * hash string The hash associated with the scan results * total_detected_avs int32 The number of AVs that detected a threat * scan_details object Scanning details per engine scan engine object scan_time int32 Scanning time for engine * def_time string The latest engine definition time * scan_result_i int32 Indicates whether the engine found the file as malicious * threat_found string Threat found by engine * EXPAND 400 Bad request: the server cannot process the request due to something that is perceived to be a client error Response { "data": [...] } Copy Retrieving scan history Look up the scan history of a hash by MD5, SHA1, or SHA256 (some scan histories can have hundreds of entries). Auth None Headers apikey string The apikey identifies and authenticates the user. * Path Params hash string The MD5, SHA1 or SHA256 hash you want to look up information for * Query String limit integer Pagination - how many entries you want to return. offset integer Pagination - how many entries to skip (sorted chronologically). GET /hash/{hash}/scanhistory cURL Request Requests net/http Guzzle HttpClient OkHttp curl --get \ --url 'https://api.metadefender.com/v4/hash/6A5C19D9FFE8804586E8F4C0DFCC66DE/scanhistory' \ --header 'apikey: 4gg5f4123eg4gg7a58d502dfc3f2898g' \ --data limit={limit} \ --data offset={offset} Copy Responses application/json; charset=utf-8 200 The request has succeeded Headers Content-Length string Specifies the size of the message body in bytes. X-Authenticated string Indicates the source of authentication. X-RateLimit-Limit string Indicates the maximum number of requests that a client can make within a given time period. X-RateLimit-Used string Indicates the number of requests that a client has made within the current time period, as tracked by the server's rate limiting system. X-RateLimit-Remaining string Indicates the number of requests that a client can still make within the current time period, as determined by the server's rate limiting system. X-RateLimit-Reset-In string Indicates the amount of time remaining until the rate limit resets, as determined by the server's rate limiting system. X-RateLimit-For string Indicates the resource or endpoint for which the rate limit applies. X-RateLimit-Interval string Indicates the time interval during which the rate limit is enforced by the server. X-Response-Time string Indicates the response time expressed in milliseconds. Body Scan history object md5 string The MD5 hash corresponding to the file scanned * sha1 string The SHA1 hash corresponding to the file scanned * sha256 string The SHA256 hash corresponding to the file scanned * scan_result_history array[object] Scan result history * data_id string The dataId assigned to the file that underwent data sanitization * scan_all_result_i int32 The result of the scanning process, indicating whether the file is infected * start_time string The date when the scan started * total_time string The total duration of the scan total_avs int32 The number of AVs used by the API * total_detected_avs int32 The number of AVs that detected a threat * EXPAND 404 The requested page was not found Response { "md5": "6A5C19D9FFE8804586E8F4C0DFCC66DE", "sha1": "016CD548A5BA78015F85E2591BF6189658ACA066", "sha256": "BE41E36233DD8DB2B28A109E7FC7C409E1353BF2D1710158BBE267280E163353", "scan_result_history": [ { "total_detected_avs": 15, "total_avs": 37, "scan_all_result_i": 1, "start_time": "2019-02-26T21:53:32.770Z", "data_id": "ZTE3MDgyMkh5UmZGTl94cV9aUzFsSWU3aGtVNA" }, { "total_detected_avs": 15, "total_avs": 37, "scan_all_result_i": 1, "start_time": "2019-02-25T23:05:26.628Z", "data_id": "ZTE3MDgyMkh5UmZGTl94cV9aQnlPR2RaUFJIRQ" }, { "total_detected_avs": 15, "total_avs": 37, "scan_all_result_i": 1, "start_time": "2019-02-24T09:10:11.792Z", "data_id": "ZTE3MDgyMkh5UmZGTl94cV9aSHlneFNneHphQlY" } ] } Copy File badge API for retrieving scan result images, called 'badges', which reflect the scan result status of a particular hash. If the hash was scanned by MetaDefender Cloud and there was no threat detected, the 'No threat detected' badge will be returned (see a preview below in the 'Response Body' section). If the hash was detected as infected, the 'Threat detected' badge will be returned. If the hash was never scanned by MetaDefender Cloud, the 'No information available' badge is displayed. The point of these badges is to integrate them into your website or application in order to increase the confidence of files provided. For example, a website that offers a software installer package will show this badge with the scan results of the installer saying (ideally) that the file is clean. Here is an HTML sample code showing the recommended way of integrating this functionality: Obtaining the badge is straightforward, just compose the URL with the hash of the file, and specify badge type (size and image format). In order for the site visitors to be able to get more information about the scan results of the file, insert the image into an link tag which will open the scan results page on our website. The "small" badge size can be used in markdown readme files from code repositories. Auth None Path Params hash string The MD5, SHA1 or SHA256 hash you want to look up information for * Query String size string You can selecte the size of the image from the following options: "small" or "medium" (default is small) type string You can select the type of image from the following options: "svg", "png" or "jpg" (default is svg) GET /hash/{hash}/badge cURL Request Requests net/http Guzzle HttpClient OkHttp curl --get \ --url 'https://api.metadefender.com/v4/hash/6A5C19D9FFE8804586E8F4C0DFCC66DE/badge' \ --data size={size} \ --data type={type} Copy Responses image/png 200 The request has succeeded file file 400 Bad request: the server cannot process the request due to something that is perceived to be a client error Response No threat detected badge Copy Reputation Service MetaDefender Cloud allows users to check IP addresses, domains, and URLs for malicious behavior using multiple IP & URL reputation sources. This functionality makes it possible to identify threats like botnets that would not be found through scanning files when accessing content. By providing a standardized interface for leading IP & URL reputation sources, MetaDefender Cloud makes it possible to obtain aggregated data on whether an IP address, domain or URL should be trusted, enabling you to monitor your network for possible threats. MetaDefender Cloud provides two basic ways of verifying reputation for each type: Single scan (Scanning IP / Domain / URL) Bulk scans (Scanning list of IPs / Domains / URLs) Endpoints GET /ip/{observable_ip} POST /ip/ GET /url/{observable_url} POST /url/ GET /domain/{observable_domain} POST /domain/ SHOW Application Information MetaDefender Cloud allows users to leverage our threat intelligence platform by providing an extensive REST API. The unique data set shared through our platform is collected from millions of live machines. This data set offers you tremendous insights on the behavior of potential malware, in order of weeks, from endpoints used in live environments by real users. This real-time information is more valuable than information from a sandbox solution, where everything is running in a controlled and simulated environment for approximately 3 minutes. Through our API, you will be able to retrieve all the applications that the searched hash belongs to, all the network connections made by those applications, and the other loaded components that are used by those applications. You will be able to identify, restrict, or grant access based on the correlations provided. Endpoints GET /hash/{exif_hash}/exif GET /hash/{peinfo_hash}/peinfo GET /hash/{apk_hash}/apk-manifest SHOW Data Sanitization Cdr MetaDefender Cloud allows users to leverage our Deep CDR (Content Disarm and Reconstruction) technology by providing an extensive REST API. Through our API, you will be able to use data sanitization (CDR) to strip out embedded objects in document files. Some targeted attacks may not be detected by traditional anti-malware engines, which is why data sanitization should be performed on document files. The CDR process provides an extra level of insurance against zero-day attacks without affecting the usability of the files. MetaDefender Cloud leverages the MetaDefender Core Deep CDR engine. Endpoints GET /file/converted/{dataId} DELETE /file/converted/{dataId} SHOW Malware Sample Sharing The endpoints part of malware sharing program are designed to expose the latest malware identified by OPSWAT, both infected files, and possible false positives. These endpoints are only available to OPSWAT partners participating in the malware exchange program. If you are an antivirus vendor, or have a malware feed and want to participate in the program, please contact us at malware-sharing@opswat.com. The lists expose information like the hashes of the files, the engines which detected the file and the download link, so it is easy to parse the feed and identify interesting hashes before starting the download. MetaDefender Cloud does not store the files in archives separate. So it might be the case that a downloaded file has a different hash than specified in the URL. In this case, the hash can be found inside the archive. The feed is generated once per day. At the moment, only the current day can be accessed. Endpoints GET /feed/hashes GET /feed/false-positives GET /feed/false-positives/{engine} GET /file/{hash}/download SHOW Threat Intelligence Feed OPSWAT's threat intelligence feed enables developers to leverage data collected from thousands of MetaDefender Cloud community users and customers. Developers, IT administrators and organizations can easily integrate our up-to-date malware threat intelligence data into their existing tools or solutions to effectively protect their organization against threats. Use cases for the feed include: Organizations that want to be on the lookout for the hottest malware IT specialists that implement file denylist based on hashes Researchers analyzing trending malware on the market Security products that leverage threat intelligence capabilities to harden security measures Endpoints GET /feed/clean/latest GET /feed/infected/latest SHOW Status Endpoints Various endpoints for querying MetaDefender Cloud. Endpoints GET /status/version GET /status/enginedef SHOW Dynamic Analysis API calls for dynamic analysis. General information can be found here: Dynamic analysis Endpoints POST /sandbox GET /sandbox/{sandbox_id} GET /hash/{sandbox_hash}/sandbox SHOW

0 – No Threats Found Meaning:This result indicates that the file was scanned successfully and no threats were detected. Alternatively, it can also mean the file was empty.User Guidance:You can generally consider the file to be safe, based on the current antivirus engine results. However, note that no antivirus solution can guarantee 100% detection. If you have reasons to doubt the file, a deeper manual inspection may be warranted despite this result.1 – Infected/Known Meaning:The file has been positively identified as containing a known threat. This detection is based on signature or heuristic analysis by one or more scanning engines.User Guidance:Do not open or use this file. It has been confirmed as malicious and may contain viruses, ransomware, trojans, worms, or other forms of malware. Immediate deletion or isolation is recommended. If the file was downloaded from a trusted source, you should notify them immediately.2 – Suspicious Meaning:The file has not been definitively marked as malicious, but it exhibits behavior or characteristics commonly associated with threats. These may include obfuscation, macros, or anomalies in structure.User Guidance: Proceed with caution. While not confirmed as malware, the file could still be dangerous. Consider manual analysis or sandbox execution before trusting the file. If it's from an unverified source, you may want to discard it.3 – Failed To Scan Meaning:The scan attempt failed. This usually happens due to technical issues, such as an unreadable file, invalid format, corrupted data, or lack of read permissions. If no scan engines were enabled, this is the default result.User Guidance:You should assume the file was not evaluated properly. Try scanning it again or verify that the file is accessible and supported. In some cases, the file could be intentionally crafted to resist scanning.5 – Unknown Meaning:This status is used only in bulk hash lookups and means that the file hash was not found in the MetaDefender database. It is not returned for individual file scans.User Guidance:The file’s reputation is undetermined based on the database. If you are unsure about the file origin or purpose, perform a full scan or behavioral analysis.7 – Skipped Clean Meaning:The file scan was intentionally skipped because the file type is part of an "allowlist" (types deemed safe by policy).User Guidance:While the system considers the file type safe by default, be cautious if you suspect file spoofing or tampering. For instance, a seemingly safe .txt file may still contain encoded scripts if misclassified. 8 – Skipped Infected Meaning:The file was not scanned because it belongs to a blocked file type, typically set by administrators. These are considered high risk and are denied by policy.User Guidance:Treat this file as dangerous by default. It’s recommended not to use or distribute it without further investigation or confirmation from the source.9 – Exceeded Archive Depth Meaning:The file is a compressed archive (e.g., .zip, .rar, .7z) with nested layers beyond the allowed scanning depth.User Guidance:Not all inner contents were scanned. This is a common technique used by malware to hide malicious files deep within archives. You should extract and analyze the inner layers manually if possible.10 – Not Scanned / No scan results Meaning:This indicates the scanning engine did not produce any result. It may occur due to engine updates, disabled scan features, or internal logic.User Guidance:Since the file was not evaluated, it should be treated as unknown. Re-scan it later or use an alternative scanner toensure a result is returned.11 – Aborted Meaning:The scan process was interrupted due to an issue with OPSWAT's infrastructure, such as service downtime or processing errors.User Guidance:The result is incomplete and should not be trusted. Try submitting the file again later.12 – Encrypted Meaning:The file is encrypted or password-protected, which prevents the engine from scanning its contents. This includes encrypted ZIP/RAR files or password-locked PDFs and documents.User Guidance:You will need to manually decrypt or extract the file for it to be scanned. Do not trust encrypted files unless you know the sender and the file’s contents.